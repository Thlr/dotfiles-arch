#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
	*) ;;
esac

# acpi alternative
# acpi | sed "s/Battery [0-9]: //;s/[Dd]ischarging, /🔋/;s/[Nn]ot charging, /🛑/;s/[Cc]harging, /🔌/;s/[Uu]nknown, /♻️/;s/[Ff]ull, /⚡/;s/ \(remaining\|until charged\)//"; exit

# Loop through all attached batteries.
for battery in /sys/class/power_supply/BAT?
do
	# Get its remaining capacity and charge status.
	capacity=$(cat "$battery"/capacity 2>/dev/null) || break
	status=$(cat "$battery"/status)
	icon=""

	# Prefix
	case $status in
		"Discharging")
			if (($capacity < 10)); then
				icon=""
			elif (($capacity < 20)); then
				icon=""
			elif (($capacity < 30)); then
				icon=""
			elif (($capacity < 40)); then
				icon=""
			elif (($capacity < 50)); then
				icon=""
			elif (($capacity < 60)); then
				icon=""
			elif (($capacity < 70)); then
				icon=""
			elif (($capacity < 80)); then
				icon=""
			elif (($capacity < 90)); then
				icon=""
			elif (($capacity < 100)); then
				icon=""
			else
				icon=""
			fi
			;;
		"Not charging")
				icon=""
			;;
		"Charging")
			if (($capacity < 20)); then
				icon=""
			elif (($capacity < 30)); then
				icon=""
			elif (($capacity < 40)); then
				icon=""
			elif (($capacity < 60)); then
				icon=""
			elif (($capacity < 80)); then
				icon=""
			elif (($capacity < 100)); then
				icon=""
			else
				icon=""
			fi
			;;
		"Unknown")
			icon=""
			;;
		"Full")
			icon=""
			;;
	esac

	echo $icon $capacity%
	#printf "%s%s%%" "$icon" "$capacity"
done | sed 's/ *$//'
